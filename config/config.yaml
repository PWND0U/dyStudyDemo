database:
  # 默认数据库 mysql/sqlite 目前之前两种数据库
  connection: mysql
  mysql:
    host: 127.0.0.1
    dbName: douyin
    port: 3306
    username: douyin
    password: douyin
    charset: utf8mb4
    # 连接池配置
    maxIdleConnections: 100
    maxOpenConnections: 25
    maxLifeSeconds: 300
  sqlite:
    dbName: database/database.db
  redis:
    host: 127.0.0.1
    port: 6379
    password:
    DbName: 1
app:
  # 应用名称
  name: blogApi
  # 加密会话、JWT 加密
  appKey: 33446a9dcf9ea060a0a6532b166da32f304af0de
  # 当前环境，用以区分多环境，一般为 local, stage, production, test
  env: production
  #  是否进入调试模式
  debug: false
  # 应用服务端口
  appPort: 8888
  # 用以生成链接
  appUrl: http://localhost:10010
  # 设置时区，JWT 里会使用，日志记录里也会使用到
  timeZone: Asia/Shanghai
log:
  # 日志级别，必须是以下这些选项：
  # "debug" —— 信息量大，一般调试时打开。系统模块详细运行的日志，例如 HTTP 请求、数据库请求、发送邮件、发送短信
  # "info" —— 业务级别的运行日志，如用户登录、用户退出、订单撤销。
  # "warn" —— 感兴趣、需要引起关注的信息。 例如，调试时候打印调试信息（命令行输出会有高亮）。
  # "error" —— 记录错误信息。Panic 或者 Error。如数据库连接错误、HTTP 端口被占用等。一般生产环境使用的等级。
  # 以上级别从低到高，level 值设置的级别越高，记录到日志的信息就越少
  # 开发时推荐使用 "debug" 或者 "info" ，生产环境下使用 "error"
  logLevel: debug

  # 日志的类型，可选：
  # "single" 独立的文件
  # "daily" 按照日期每日一个
  logType: daily

  # ------------------ 滚动日志配置 ------------------
  # 日志文件路径
  logFileName: storage/logs/logs.log
  # 每个日志文件保存的最大尺寸 单位：M
  maxSize: 64
  # 最多保存日志文件数，0 为不限，MaxAge 到了还是会删
  maxBackup: 5
  # 最多保存多少天，7 表示一周前的日志会被删除，0 表示不删
  maxAge: 30
  # 是否压缩，压缩日志不方便查看，我们设置为 false（压缩可节省空间）
  compress: false
